{"ast":null,"code":"var _jsxFileName = \"/home/iowk/exhibition_map/frontend/src/register.jsx\";\nimport React, { Component } from 'react';\nimport './register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendPath = 'http://localhost:8000';\n\nclass Register extends Component {\n  // Full register page\n  constructor(props) {\n    super(props);\n\n    this.handleWriteUsername = event => {\n      this.setState({\n        username: event.target.value\n      }); //console.log(\"UserName:\",this.state.username);\n    };\n\n    this.handleWriteEmail = event => {\n      this.setState({\n        email: event.target.value\n      }); //console.log(\"Email:\",this.state.email);\n    };\n\n    this.handleWritePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleWritePasswordConf = event => {\n      this.setState({\n        passwordConf: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      // POST username, email and password\n      // TODO: email verification \n      fetch(backendPath + '/map/users/register/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(res_json => {\n            this.setState({\n              err: res_json\n            });\n            this.checkPasswordConf();\n          }).catch(err => {\n            alert(err);\n          });\n          ;\n        } else {\n          if (this.checkPasswordConf()) this.setState({\n            regSuccess: true\n          });\n          console.log('Registration success'); // TODO: redirect page\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConf: '',\n      regSuccess: false,\n      err: {\n        username: '',\n        email: '',\n        password: '',\n        passwordConf: ''\n      }\n    };\n  }\n\n  checkPasswordConf() {\n    if (this.state.password === this.state.passwordConf) return true;\n    let errCopy = this.state.err;\n    errCopy.passwordConf = \"Confirm password incorrect\";\n    this.setState({\n      err: errCopy\n    });\n    return false;\n  }\n\n  clearErr() {\n    let err_cpy = {};\n\n    for (key in this.state.err) {\n      err_cpy[key] = '';\n    }\n\n    this.setState({\n      err: err_cpy\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleWriteUsername,\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleWriteEmail,\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: this.handleWritePassword,\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: this.handleWritePasswordConf,\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.passwordConf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitButton\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"names":["React","Component","backendPath","Register","constructor","props","handleWriteUsername","event","setState","username","target","value","handleWriteEmail","email","handleWritePassword","password","handleWritePasswordConf","passwordConf","handleSubmit","fetch","method","headers","body","JSON","stringify","state","then","res","ok","json","res_json","err","checkPasswordConf","catch","alert","regSuccess","console","log","preventDefault","errCopy","clearErr","err_cpy","key","render","bind"],"sources":["/home/iowk/exhibition_map/frontend/src/register.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './register.css';\n\nconst backendPath = 'http://localhost:8000'\n\nclass Register extends Component {\n    // Full register page\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            passwordConf: '',\n            regSuccess: false,\n            err: {\n                username: '',\n                email: '',\n                password: '',\n                passwordConf: '',\n            },\n        };\n    }\n    handleWriteUsername = (event) => {\n        this.setState({username: event.target.value});\n        //console.log(\"UserName:\",this.state.username);\n    }\n    handleWriteEmail = (event) => {\n        this.setState({email: event.target.value});\n        //console.log(\"Email:\",this.state.email);\n    }\n    handleWritePassword = (event) => {\n        this.setState({password: event.target.value});\n    }\n    handleWritePasswordConf = (event) => {\n        this.setState({passwordConf: event.target.value});\n    }\n    checkPasswordConf(){\n        if(this.state.password===this.state.passwordConf) return true;\n        let errCopy = this.state.err;\n        errCopy.passwordConf = \"Confirm password incorrect\";\n        this.setState({err:errCopy});\n        return false;\n    }\n    clearErr(){\n        let err_cpy = {};\n        for(key in this.state.err){\n            err_cpy[key] = '';\n        }\n        this.setState({err: err_cpy});\n    }\n    handleSubmit = (event) => {\n        // POST username, email and password\n        // TODO: email verification \n        fetch(backendPath+'/map/users/register/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password,\n            })\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json()\n                .then(res_json => {\n                    this.setState({err:res_json});\n                    this.checkPasswordConf();\n                })\n                .catch(err => {\n                    alert(err);\n                });;\n            }\n            else{\n                if(this.checkPasswordConf()) this.setState({regSuccess: true});\n\n                console.log('Registration success'); // TODO: redirect page\n            }\n        })\n        event.preventDefault();\n    }\n    render() {\n        return(\n            <div id=\"register\">\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                <div className='inpDiv'>\n                    <span>Username</span>\n                    <input\n                        type='text'\n                        onChange={this.handleWriteUsername}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.username}</div>\n                <div className='inpDiv'>\n                    <span>Email</span>\n                    <input\n                        type='text'\n                        onChange={this.handleWriteEmail}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.email}</div>\n                <div className='inpDiv'>\n                    <span>Password</span>\n                    <input\n                        type='password'\n                        onChange={this.handleWritePassword}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.password}</div>\n                <div className='inpDiv'>\n                    <span>Confirm Password</span>\n                    <input\n                        type='password'\n                        onChange={this.handleWritePasswordConf}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.passwordConf}</div>\n                <button type=\"submit\" className='submitButton'>\n                    Register\n                </button>\n                </form>\n            </div>);\n    }\n}\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}