{"ast":null,"code":"import axios from './axios';\nexport async function login(username, password) {\n  try {\n    axios.post('/map/login/', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json().then(res_json => {\n          localStorage.setItem('access_jwt', res_json['access']);\n          localStorage.setItem('refresh_jwt', res_json['refresh']);\n        });\n      }\n    });\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function logout() {\n  localStorage.setItem('access_jwt', '');\n  localStorage.setItem('refresh_jwt', '');\n}\nexport async function jwtVerify() {\n  a_jwt = localStorage.getItem('access_jwt');\n  if (!a_jwt) return false;\n\n  try {\n    axios.post('/map/token/verify/', {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: a_jwt\n      })\n    }).then(res => {\n      if (res.ok) return true;\n\n      try {\n        r_jwt = localStorage.getItem('refresh_jwt');\n        if (!r_jwt) return false;\n        axios.post('/map/token/refresh/', {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token: r_jwt\n          })\n        }).then(res => {\n          return res.json().then(res_json => {\n            localStorage.setItem('access_jwt', res_json['access']);\n          });\n        });\n      } catch (e) {\n        console.log(e);\n        return false;\n      }\n    });\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}","map":{"version":3,"names":["axios","login","username","password","post","headers","body","JSON","stringify","then","res","ok","json","res_json","localStorage","setItem","e","console","log","logout","jwtVerify","a_jwt","getItem","token","r_jwt"],"sources":["/home/iowk/exhibition_map/frontend/src/auth.js"],"sourcesContent":["import axios from './axios';\n\nexport async function login(username, password){\n    try{\n        axios.post('/map/login/', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password,\n            })\n        })\n        .then(res => {\n            if(res.ok){\n                return res.json()\n                .then(res_json => {\n                    localStorage.setItem('access_jwt', res_json['access']);\n                    localStorage.setItem('refresh_jwt', res_json['refresh']);\n                })                    \n            }\n        })\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport function logout(){\n    localStorage.setItem('access_jwt', '');\n    localStorage.setItem('refresh_jwt', '');\n}\n\nexport async function jwtVerify(){\n    a_jwt = localStorage.getItem('access_jwt');\n    if(!a_jwt) return false;\n    try{\n        axios.post('/map/token/verify/', {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                token: a_jwt,\n            })\n        })\n        .then(res => {\n            if(res.ok) return true;\n            try{\n                r_jwt = localStorage.getItem('refresh_jwt');\n                if(!r_jwt) return false;\n                axios.post('/map/token/refresh/', {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        token: r_jwt,\n                    })\n                }).then(res => {\n                    return res.json()\n                    .then(res_json => {\n                        localStorage.setItem('access_jwt', res_json['access']);\n                    })                    \n                })\n            } catch (e) {\n                console.log(e);\n                return false;\n            }\n        })\n    } catch (e) {\n        console.log(e);\n        return false;\n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,QAArB,EAA+BC,QAA/B,EAAwC;EAC3C,IAAG;IACCH,KAAK,CAACI,IAAN,CAAW,aAAX,EAA0B;MACtBC,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX,CADa;MAKtBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBN,QAAQ,EAAEA,QADO;QAEjBC,QAAQ,EAAEA;MAFO,CAAf;IALgB,CAA1B,EAUCM,IAVD,CAUMC,GAAG,IAAI;MACT,IAAGA,GAAG,CAACC,EAAP,EAAU;QACN,OAAOD,GAAG,CAACE,IAAJ,GACNH,IADM,CACDI,QAAQ,IAAI;UACdC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,QAAQ,CAAC,QAAD,CAA3C;UACAC,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,QAAQ,CAAC,SAAD,CAA5C;QACH,CAJM,CAAP;MAKH;IACJ,CAlBD;EAmBH,CApBD,CAoBE,OAAOG,CAAP,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACH;AACJ;AAED,OAAO,SAASG,MAAT,GAAiB;EACpBL,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,EAAnC;EACAD,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,EAApC;AACH;AAED,OAAO,eAAeK,SAAf,GAA0B;EAC7BC,KAAK,GAAGP,YAAY,CAACQ,OAAb,CAAqB,YAArB,CAAR;EACA,IAAG,CAACD,KAAJ,EAAW,OAAO,KAAP;;EACX,IAAG;IACCrB,KAAK,CAACI,IAAN,CAAW,oBAAX,EAAiC;MAC7BC,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX,CADoB;MAK7BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBe,KAAK,EAAEF;MADU,CAAf;IALuB,CAAjC,EASCZ,IATD,CASMC,GAAG,IAAI;MACT,IAAGA,GAAG,CAACC,EAAP,EAAW,OAAO,IAAP;;MACX,IAAG;QACCa,KAAK,GAAGV,YAAY,CAACQ,OAAb,CAAqB,aAArB,CAAR;QACA,IAAG,CAACE,KAAJ,EAAW,OAAO,KAAP;QACXxB,KAAK,CAACI,IAAN,CAAW,qBAAX,EAAkC;UAC9BC,OAAO,EAAE;YACL,UAAU,kBADL;YAEL,gBAAgB;UAFX,CADqB;UAK9BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YACjBe,KAAK,EAAEC;UADU,CAAf;QALwB,CAAlC,EAQGf,IARH,CAQQC,GAAG,IAAI;UACX,OAAOA,GAAG,CAACE,IAAJ,GACNH,IADM,CACDI,QAAQ,IAAI;YACdC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,QAAQ,CAAC,QAAD,CAA3C;UACH,CAHM,CAAP;QAIH,CAbD;MAcH,CAjBD,CAiBE,OAAOG,CAAP,EAAU;QACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;QACA,OAAO,KAAP;MACH;IACJ,CAhCD;EAiCH,CAlCD,CAkCE,OAAOA,CAAP,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACA,OAAO,KAAP;EACH;AACJ"},"metadata":{},"sourceType":"module"}