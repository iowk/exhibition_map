{"ast":null,"code":"var _jsxFileName = \"/home/iowk/exhibition_map/frontend/src/register.jsx\";\nimport React, { Component } from 'react';\nimport './register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendPath = 'http://localhost:8000';\n\nclass Register extends Component {\n  // Full register page\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      // POST username, email and password\n      fetch(backendPath + '/map/users/register/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(res_json => {\n            this.setState({\n              err: res_json\n            });\n            this.checkPasswordConf();\n          }).catch(err => {\n            alert(err);\n          });\n          ;\n        } else {\n          if (this.checkPasswordConf()) {\n            this.clearErr();\n            this.setState({\n              buttomMessage: 'Registration success.\\n Verification e-mail is sent to' + this.state.email\n            });\n            this.clearInput();\n          }\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConf: '',\n      err: {\n        username: '',\n        email: '',\n        password: '',\n        passwordConf: ''\n      },\n      buttomMessage: ''\n    };\n  }\n\n  checkPasswordConf() {\n    if (this.state.password === this.state.passwordConf) return true;\n    let errCopy = this.state.err;\n    errCopy.passwordConf = \"Confirm password incorrect\";\n    this.setState({\n      err: errCopy\n    });\n    return false;\n  }\n\n  clearErr() {\n    let err_cpy = {};\n\n    for (var key in this.state.err) {\n      err_cpy[key] = '';\n    }\n\n    this.setState({\n      err: err_cpy\n    });\n  }\n\n  clearInput() {\n    this.setState({\n      username: ''\n    });\n    this.setState({\n      email: ''\n    });\n    this.setState({\n      password: ''\n    });\n    this.setState({\n      passwordConf: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => this.setState({\n              username: e.target.value\n            }),\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => this.setState({\n              email: e.target.value\n            }),\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => this.setState({\n              password: e.target.value\n            }),\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inpDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => this.setState({\n              passwordConf: e.target.value\n            }),\n            className: \"inpBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errDiv\",\n          children: this.state.err.passwordConf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitButton\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttomMessage\",\n        children: this.state.buttomMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"names":["React","Component","backendPath","Register","constructor","props","handleSubmit","event","fetch","method","headers","body","JSON","stringify","username","state","email","password","then","res","ok","json","res_json","setState","err","checkPasswordConf","catch","alert","clearErr","buttomMessage","clearInput","preventDefault","passwordConf","errCopy","err_cpy","key","render","bind","e","target","value"],"sources":["/home/iowk/exhibition_map/frontend/src/register.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './register.css';\n\nconst backendPath = 'http://localhost:8000'\n\nclass Register extends Component {\n    // Full register page\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            passwordConf: '',\n            err: {\n                username: '',\n                email: '',\n                password: '',\n                passwordConf: '',\n            },\n            buttomMessage: '',\n        };\n    }\n    checkPasswordConf(){\n        if(this.state.password===this.state.passwordConf) return true;\n        let errCopy = this.state.err;\n        errCopy.passwordConf = \"Confirm password incorrect\";\n        this.setState({err:errCopy});\n        return false;\n    }    \n    clearErr(){\n        let err_cpy = {};\n        for(var key in this.state.err){\n            err_cpy[key] = '';\n        }\n        this.setState({err: err_cpy});\n    }\n    clearInput(){\n        this.setState({username: ''});\n        this.setState({email: ''});\n        this.setState({password: ''});\n        this.setState({passwordConf: ''});\n    }\n    handleSubmit = (event) => {\n        // POST username, email and password\n        fetch(backendPath+'/map/users/register/', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password,\n            })\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json()\n                .then(res_json => {\n                    this.setState({err:res_json});\n                    this.checkPasswordConf();\n                })\n                .catch(err => {\n                    alert(err);\n                });;\n            }\n            else{\n                if(this.checkPasswordConf()){\n                    this.clearErr();\n                    this.setState({buttomMessage: 'Registration success.\\n Verification e-mail is sent to' + this.state.email});\n                    this.clearInput();\n                }\n            }\n        })\n        event.preventDefault();\n    }\n    render() {\n        return(\n            <div id=\"register\">\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                <div className='inpDiv'>\n                    <span>Username</span>\n                    <input\n                        type='text'\n                        onChange={(e) => this.setState({username: e.target.value})}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.username}</div>\n                <div className='inpDiv'>\n                    <span>Email</span>\n                    <input\n                        type='text'\n                        onChange={(e) => this.setState({email: e.target.value})}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.email}</div>\n                <div className='inpDiv'>\n                    <span>Password</span>\n                    <input\n                        type='password'\n                        onChange={(e) => this.setState({password: e.target.value})}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.password}</div>\n                <div className='inpDiv'>\n                    <span>Confirm Password</span>\n                    <input\n                        type='password'\n                        onChange={(e) => this.setState({passwordConf: e.target.value})}\n                        className='inpBox'\n                    />\n                </div>\n                <div className='errDiv'>{this.state.err.passwordConf}</div>\n                <button type=\"submit\" className='submitButton'>\n                    Register\n                </button>\n                </form>\n                <div className='buttomMessage'>{this.state.buttomMessage}</div>\n            </div>);\n    }\n}\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}