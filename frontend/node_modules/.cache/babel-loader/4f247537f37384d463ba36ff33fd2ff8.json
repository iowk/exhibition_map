{"ast":null,"code":"import axios from './axios';\nexport async function login(username, password) {\n  return new Promise(resolve => {\n    axios.post('/map/login/', JSON.stringify({\n      username: username,\n      password: password\n    }), {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      logout();\n      localStorage.setItem('access_jwt', res.data['access']);\n      localStorage.setItem('refresh_jwt', res.data['refresh']);\n      resolve();\n    }).catch(e => {\n      console.log(e.message);\n      resolve();\n    });\n  });\n}\nexport function logout() {\n  console.log(\"Logout\");\n  localStorage.setItem('access_jwt', '');\n  localStorage.setItem('refresh_jwt', '');\n}\nexport async function jwtVerify() {\n  return new Promise(resolve => {\n    console.log(\"Verify start\");\n    let a_jwt = localStorage.getItem('access_jwt');\n    if (!a_jwt) resolve(false);\n    axios.post('/map/token/verify/', JSON.stringify({\n      token: a_jwt\n    }), {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(\"TRUE\");\n      resolve(true);\n    }).catch(e => {\n      let r_jwt = localStorage.getItem('refresh_jwt');\n      if (!r_jwt) return false;\n      axios.post('/map/token/refresh/', JSON.stringify({\n        token: r_jwt\n      }), {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        localStorage.setItem('access_jwt', res.data['access']);\n        resolve(true);\n      }).catch(e => {\n        resolve(false);\n      });\n    });\n  });\n}","map":{"version":3,"names":["axios","login","username","password","Promise","resolve","post","JSON","stringify","headers","then","res","logout","localStorage","setItem","data","catch","e","console","log","message","jwtVerify","a_jwt","getItem","token","r_jwt"],"sources":["/home/iowk/exhibition_map/frontend/src/auth.js"],"sourcesContent":["import axios from './axios';\n\nexport async function login(username, password){\n    return new Promise((resolve) => {\n        axios.post('/map/login/', JSON.stringify({\n            username: username,\n            password: password,\n        }),\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            logout();\n            localStorage.setItem('access_jwt', res.data['access']);\n            localStorage.setItem('refresh_jwt', res.data['refresh']);\n            resolve();\n        })\n        .catch (e => {\n            console.log(e.message);\n            resolve();\n        });\n    });    \n}\n\nexport function logout(){\n    console.log(\"Logout\");\n    localStorage.setItem('access_jwt', '');\n    localStorage.setItem('refresh_jwt', '');\n}\n\nexport async function jwtVerify(){\n    return new Promise((resolve) => {\n        console.log(\"Verify start\");\n        let a_jwt = localStorage.getItem('access_jwt');\n        if(!a_jwt) resolve(false);\n        axios.post('/map/token/verify/', JSON.stringify({\n            token: a_jwt,\n        }),\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            console.log(\"TRUE\");\n            resolve(true);\n        })\n        .catch (e => {\n            let r_jwt = localStorage.getItem('refresh_jwt');\n            if(!r_jwt) return false;\n            axios.post('/map/token/refresh/', JSON.stringify({\n                token: r_jwt,\n            }),\n            {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => {\n                localStorage.setItem('access_jwt', res.data['access']);\n                resolve(true);\n            })\n            .catch (e => {\n                resolve(false);\n            })\n        });\n    });    \n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,QAArB,EAA+BC,QAA/B,EAAwC;EAC3C,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;IAC5BL,KAAK,CAACM,IAAN,CAAW,aAAX,EAA0BC,IAAI,CAACC,SAAL,CAAe;MACrCN,QAAQ,EAAEA,QAD2B;MAErCC,QAAQ,EAAEA;IAF2B,CAAf,CAA1B,EAIA;MACIM,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX;IADb,CAJA,EAUCC,IAVD,CAUMC,GAAG,IAAI;MACTC,MAAM;MACNC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,GAAG,CAACI,IAAJ,CAAS,QAAT,CAAnC;MACAF,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,GAAG,CAACI,IAAJ,CAAS,SAAT,CAApC;MACAV,OAAO;IACV,CAfD,EAgBCW,KAhBD,CAgBQC,CAAC,IAAI;MACTC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;MACAf,OAAO;IACV,CAnBD;EAoBH,CArBM,CAAP;AAsBH;AAED,OAAO,SAASO,MAAT,GAAiB;EACpBM,OAAO,CAACC,GAAR,CAAY,QAAZ;EACAN,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,EAAnC;EACAD,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,EAApC;AACH;AAED,OAAO,eAAeO,SAAf,GAA0B;EAC7B,OAAO,IAAIjB,OAAJ,CAAaC,OAAD,IAAa;IAC5Ba,OAAO,CAACC,GAAR,CAAY,cAAZ;IACA,IAAIG,KAAK,GAAGT,YAAY,CAACU,OAAb,CAAqB,YAArB,CAAZ;IACA,IAAG,CAACD,KAAJ,EAAWjB,OAAO,CAAC,KAAD,CAAP;IACXL,KAAK,CAACM,IAAN,CAAW,oBAAX,EAAiCC,IAAI,CAACC,SAAL,CAAe;MAC5CgB,KAAK,EAAEF;IADqC,CAAf,CAAjC,EAGA;MACIb,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX;IADb,CAHA,EASCC,IATD,CASMC,GAAG,IAAI;MACTO,OAAO,CAACC,GAAR,CAAY,MAAZ;MACAd,OAAO,CAAC,IAAD,CAAP;IACH,CAZD,EAaCW,KAbD,CAaQC,CAAC,IAAI;MACT,IAAIQ,KAAK,GAAGZ,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAZ;MACA,IAAG,CAACE,KAAJ,EAAW,OAAO,KAAP;MACXzB,KAAK,CAACM,IAAN,CAAW,qBAAX,EAAkCC,IAAI,CAACC,SAAL,CAAe;QAC7CgB,KAAK,EAAEC;MADsC,CAAf,CAAlC,EAGA;QACIhB,OAAO,EAAE;UACL,UAAU,kBADL;UAEL,gBAAgB;QAFX;MADb,CAHA,EASCC,IATD,CASMC,GAAG,IAAI;QACTE,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,GAAG,CAACI,IAAJ,CAAS,QAAT,CAAnC;QACAV,OAAO,CAAC,IAAD,CAAP;MACH,CAZD,EAaCW,KAbD,CAaQC,CAAC,IAAI;QACTZ,OAAO,CAAC,KAAD,CAAP;MACH,CAfD;IAgBH,CAhCD;EAiCH,CArCM,CAAP;AAsCH"},"metadata":{},"sourceType":"module"}